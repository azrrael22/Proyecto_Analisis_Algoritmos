ENTRYTYPE,ID,abstract,author,doi,eprint,journal,number,pages,title,url,volume,year
article,doi:10.1177/0162643420978564,"The ideas of computational thinking (CT) and computer science (CS) are increasingly being integrated into K-12 education. Yet, insufficient attention exists regarding access and exposure of CT and CS for students with disabilities. In this Technology in Action, the authors sought to present an argument—as well as actual activities—for teachers to start to expose and engage students with disabilities in CT and CS. Through the presentation of case studies as well as other non-case situated activities, practical ideas, and steps for integrating CT and CS in mathematics teaching and learning for students with disabilities are presented.",Emily C. Bouck and Aman Yadav,10.1177/0162643420978564,https://doi-org.crai.referencistas.com/10.1177/0162643420978564,Journal of Special Education Technology,1,151–160,Providing Access and Opportunity for Computational Thinking and Computer Science to Support Mathematics for Students With Disabilities,https://doi-org.crai.referencistas.com/10.1177/0162643420978564,37,2022a
article,doi:10.1177/0735633120979930,"In this paper, we explore the challenges experienced by a group of Primary 5 to 6 (age 12–14) students as they engaged in a series of problem-solving tasks through block-based programming. The challenges were analysed according to a taxonomy focusing on the presence of computational thinking (CT) elements in mathematics contexts: preparing problems, programming, create computational abstractions, as well as troubleshooting and debugging. Our results suggested that the challenges experienced by students were compounded by both having to learn the CT-based environment as well as to apply mathematical concepts and problem solving in that environment. Possible explanations for the observed challenges stemming from differences between CT and mathematical thinking are discussed in detail, along with suggestions towards improving the effectiveness of integrating CT into mathematics learning. This study provides evidence-based directions towards enriching mathematics education with computation.",Zhihao Cui and Oi-Lam Ng,10.1177/0735633120979930,https://doi-org.crai.referencistas.com/10.1177/0735633120979930,Journal of Educational Computing Research,5,988–1012,The Interplay Between Mathematical and Computational Thinking in Primary School Students’ Mathematical Problem-Solving Within a Programming Environment,https://doi-org.crai.referencistas.com/10.1177/0735633120979930,59,2021b
article,doi:10.1177/07356331241251397,"Previous research has not adequately explored students’ behavioral processes when addressing computational thinking (CT) problems of varying difficulty, limiting insights into students’ detailed CT development characteristics. This study seeks to fill this gap by employing gamified CT items across multiple difficulty levels to calculate comprehensive behavioral sequence quality indicators. And then, through latent profile analysis, we identified four distinct latent classes of behavioral process. We then examined the in-game performance differences among these classes, uncovering each class’s unique attributes. Class 1 students consistently demonstrated high-quality, efficient behavioral sequences regardless of item difficulty. In contrast, class 2 students applied significant cognitive effort and trial-and-error strategies, achieving acceptable scores despite low behavioral sequence quality. Class 3 students excelled in simpler items but faltered with more complex ones. Class 4 students displayed low motivation for challenging items, often guessing answers quickly. Additionally, we investigated the predictive value of students’ performance in gamified items and their behavioral process classes for their external CT test scores. The study finally elaborated on the theoretical implications for researchers and the practical suggestions for teachers in CT cultivation.",Qing Guo and Huan Li and Sha Zhu,10.1177/07356331241251397,https://doi-org.crai.referencistas.com/10.1177/07356331241251397,Journal of Educational Computing Research,6,1475–1508,Understanding the Characteristics of Students’ Behavioral Processes in Solving Computational Thinking Problems Based on the Behavioral Sequences,https://doi-org.crai.referencistas.com/10.1177/07356331241251397,62,2024c
article,doi:10.1177/21582440231217715,"The capability of computer programming language logic is one of the basics of technical education. How to improve students “interest in program logic design and help overcome students” fears of coding has become vital for educators. Cultivating practical talents with information technology application and basic programming development will become one of the important topics in the department of information related science. The objective of this research is to improve the ability of learning basic programming courses by using Zuvio interactive software. Zuvio employs the mathematical logic of computational thinking to analyze problems and enhance learners’ interest in learning programming skills through a graphical interface tool with building blocks. It uses innovative interactive teaching to use peer and self-assessment to study the content of the course. Zuvio improves the design ability of different groups of class learning Python programming. In line with the innovative teaching policy of the schools and the current stage of the learner’s learning model, learning effectiveness can be achieved. The research results were analyzed by midterm and final experimental group scores, and the progress of the experimental group’s scores was examined through descriptive statistics. The average and standard deviation of the assessment were used to analyze the progress of the experimental group students in the programming course. In the classroom, assessment criteria were set up as the basis for peer assessment scoring. After the midterm and final exams, the teacher assessment and peer assessment scores were analyzed for cognitive differences, and possible learning differences were analyzed. The students’ professional ability was examined to see if it met the professional standards required by the course, and whether innovative teaching methods could improve the learning outcomes of learners with different professional backgrounds in Python programming.",Tsung-Chih Hsiao and Ya-Hsueh Chuang and Chien-Yun Chang and Tzer-Long Chen and Hong-Bo Zhang and Jhih-Chung Chang,10.1177/21582440231217715,https://doi-org.crai.referencistas.com/10.1177/21582440231217715,Sage Open,4,21582440231217716,Combining Building Block Process With Computational Thinking Improves Learning Outcomes of Python Programming With Peer Assessment,https://doi-org.crai.referencistas.com/10.1177/21582440231217715,13,2023d
article,doi:10.1177/0735633119887187,"Persistence has proven to be a great challenge in online learning environments. Gaming and interactivity have been suggested as essential features in reducing dropout and increasing persistence in online learning. Yet in interactive game-based learning environments, persistence in moving forward in the game may come at the expense of investing in each of the game’s levels. That is, the motivation to complete the game may have a deleterious effect on learning at specific levels and hence on learning from the game in general. Therefore, we have chosen to focus on microlevel persistence (i.e., persistence during each component of the learning process). We study microlevel persistence in the context of acquiring computational thinking—the thought process of solving problems through abstraction—which is a key component of the new literacies needed for tomorrow’s citizens. In this study, we analyze data collected from an online, game-based learning environment (CodeMonkeyTM). The data document the activity of first to sixth graders (N = 2,040). Overall, we find that persistence is positively associated with difficulty and that the most determined learners were highly persistent across topics in achieving the best solution.",Rotem Israel-Fishelson and Arnon Hershkovitz,10.1177/0735633119887187,https://doi-org.crai.referencistas.com/10.1177/0735633119887187,Journal of Educational Computing Research,5,891–918,Persistence in a Game-Based Learning Environment: The Case of Elementary School Students Learning Computational Thinking,https://doi-org.crai.referencistas.com/10.1177/0735633119887187,58,2020e
article,doi:10.1177/0022487117732317,"This article examines teacher preparation and teacher change in engineering and computer science education. We examined culturally responsive teaching self-efficacy (CRTSE), culturally responsive teaching outcome expectancy (CRTOE) beliefs, and attitudes toward computational thinking (CT) as teachers participated in one of three treatment groups: robotics only, game design only, or blended robotics/game design. Descriptive data revealed that CRTSE gain scores were higher in the robotics only and blended contexts than in the game design only context. However, CRTOE beliefs were consistent across all treatment groups. In regard to CT attitudes, teachers’ gain scores were higher in the game design only and blended contexts than in the robotics only context. In addition, there were differences by treatment group related to STEM (science, technology, engineering, and mathematics) practices, while cultural artifacts were evident in each learning environment. The results of this study reveal some variability by treatment type and inform future research on equitable practices in engineering and computer science education.",Jacqueline Leonard and Monica Mitchell and Joy Barnes-Johnson and Adrienne Unertl and Jill Outka-Hill and Roland Robinson and Carla Hester-Croff,10.1177/0022487117732317,https://doi-org.crai.referencistas.com/10.1177/0022487117732317,Journal of Teacher Education,4,386–407,"Preparing Teachers to Engage Rural Students in Computational Thinking Through Robotics, Game Design, and Culturally Responsive Teaching",https://doi-org.crai.referencistas.com/10.1177/0022487117732317,69,2018f
article,doi:10.1177/07356331221133822,"Underpinning the teaching of coding with Computational Thinking has proved relevant for diverse learners, particularly given the increasing demand in upskilling for today’s labour market. While literature on computing education is vast, it remains unexplored how existing CT conceptualisations relate to the learning opportunities needed for a meaningful application of coding in non-Computer Scientists’ lives and careers. In order to identify and organise the learning opportunities in the literature about CT, we conducted a configurative literature review of studies published on Web of Science, between 2006 and 2021. Our sample gathers 34 papers and was analysed on NVivo to find key themes. We were able to organise framings of CT and related learning opportunities into three dimensions: functional, collaborative, and critical and creative. These dimensions make visible learning opportunities that range from individual cognitive development to interdisciplinary working with others, and to active participation in a technologically evolving society. By comparing and contrasting frameworks, we identify and explain different perspectives on skills. Furthermore, the three-dimensional model can guide pedagogical design and practice in coding courses.",Ana Melro and Georgie Tarling and Taro Fujita and Judith Kleine Staarman,10.1177/07356331221133822,https://doi-org.crai.referencistas.com/10.1177/07356331221133822,Journal of Educational Computing Research,4,901–924,What Else Can Be Learned When Coding? A Configurative Literature Review of Learning Opportunities Through Computational Thinking,https://doi-org.crai.referencistas.com/10.1177/07356331221133822,61,2023g
article,doi:10.1177/07356331231225269,"Computational thinking (CT), as a new future-oriented literacy, has gained attention at the basic education level. Graphical programming is the common way to develop CT in primary students, but this drag-and-drop programming may weaken students’ understanding of programming’s abstract concepts and code logic. Text-based programming approaches can solve the problems faced by graphical programming, but few studies have explored the impact of text-based programming on CT. Therefore, we conducted a quasi-experimental study with 98 6th graders to explore the impact of gamified Python programming on CT. The findings showed that CT skills, as well as abstraction and decomposition, pattern recognition and evaluation in CT sub-skills, were significantly higher with students in the experimental group than in the control group. Furthermore, we found that gamified Python programming enabled boys and girls to reach the same level of CT skills. However, in terms of CT sub-skills, we found that gamified Python programming was more beneficial to the development of pattern recognition and evaluation skills for boys and abstraction and decomposition skills for girls. This demonstrated the effectiveness of gamified Python programming to improve primary students’ CT skills while clarifying the impact of gender and enriching research in the field of text-based programming.",Lihui Sun and Junjie Liu,10.1177/07356331231225269,https://doi-org.crai.referencistas.com/10.1177/07356331231225269,Journal of Educational Computing Research,3,846–874,Effects of Gamified Python Programming on Primary School Students’ Computational Thinking Skills: A Differential Analysis of Gender,https://doi-org.crai.referencistas.com/10.1177/07356331231225269,62,2024h
article,doi:10.1177/07356331211051043,"This study aimed to develop the Computational Thinking Test for Elementary School Students (CTT-ES) to assess young children’s CT competencies in non-programming contexts and also examine the relationship between CT competencies and CT dispositions. A survey including a pool of CTT-ES candidate items and the Computational Thinking Scale (CTS) was administered to 631 elementary school students. Rasch model of the Item Response Theory and the discrimination analysis of the Classical Testing Theory were conducted for item analyses. Pearson’s correlation analyses and hierarchical multiple regression analyses were used to examine the relationships between CTT-ES and CTS scores. The results showed that the final CTT-ES including 16 items had a good fitness, discrimination, and reliability to evaluate elementary students’ domain-general CT competencies. The convergent validity of CTT-ES was confirmed by its significant correlations with the CTS scores. The significant regression model not only showed students’ CT competencies can be predicted by their CT dispositions but also supported The Developmental Model of CT. This study provided a valid and reliable tool for assessing young children’s CT abilities. It also furthered our understanding about the developmental orders of CT abilities and contributed to the theoretical construction of CT.",Meng-Jung Tsai and Francis Pingfan Chien and Silvia Wen-Yu Lee and Chung-Yuan Hsu and Jyh-Chong Liang,10.1177/07356331211051043,https://doi-org.crai.referencistas.com/10.1177/07356331211051043,Journal of Educational Computing Research,5,1110–1129,Development and Validation of the Computational Thinking Test for Elementary School Students (CTT-ES): Correlate CT Competency With CT Disposition,https://doi-org.crai.referencistas.com/10.1177/07356331211051043,60,2022i
article,doi:10.1177/07356331211039961,"Many countries have incorporated computational thinking (CT) and programming languages into their science and technology courses. Students can improve their CT ability by learning programming languages. Moreover, situated learning enables students to generate knowledge and master problem-solving skills through interaction with situations. This study incorporated Webduino learning and the situated learning strategy into a programming course and analyzed its impact on high school students’ CT ability, learning motivation, and course satisfaction. A quasi-experimental research method was adopted, wherein the experimental group was subjected to the situated learning strategy and the control group was subjected to a traditional teaching method. The study results revealed that integrating Webduino programming with situated learning could effectively improve five categories of CT skills; moreover, the activity models of situated learning enhanced the value and expectation dimensions of learning motivation. In addition, satisfaction with the course content and self-identity slightly improved. However, because teachers were required to elaborate on stories to promote learner engagement with life situations, the time available for programming was limited. Thus, no significant difference was observed in teaching satisfaction.",Ting-Ting Wu and Jian-Ming Chen,10.1177/07356331211039961,https://doi-org.crai.referencistas.com/10.1177/07356331211039961,Journal of Educational Computing Research,3,631–660,"Combining Webduino Programming With Situated Learning to Promote Computational Thinking, Motivation, and Satisfaction Among High School Students",https://doi-org.crai.referencistas.com/10.1177/07356331211039961,60,2022j
