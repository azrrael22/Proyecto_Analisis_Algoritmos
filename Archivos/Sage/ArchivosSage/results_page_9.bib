@article{doi:10.1177/07356331221102312,
author = {Anat Ben-Yaacov and Arnon Hershkovitz},
title = {Types of Errors in Block Programming: Driven by Learner, Learning Environment},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {1},
pages = {178–207},
year = {2023a},
doi = {10.1177/07356331221102312},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221102312},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221102312},
abstract = {Block programming has been suggested as a way of engaging young learners with the foundations of programming and computational thinking in a syntax-free manner. Indeed, syntax errors—which form one of two broad categories of errors in programming, the other one being logic errors—are omitted while block programming. However, this does not mean that errors are omitted at large in such environments. In this exploratory case study of a learning environment for early programming (Kodetu), we explored errors in block programming of middle school students (N = 123), using log files drawn from a block-based online. Analyzing 1033 failed executions, we found that errors may be driven by either learners’ knowledge and behavior, or by the learning environment design. The rate of error types was not associated with the learners’ and contextual variables examined, with the exception of task complexity (as defined by SOLO taxonomy). Our findings highlight the importance of learning from errors and of learning environment design.}
}

@article{doi:10.1177/1729881418820425,
author = {Aurelio Bermúdez and Rafael Casado and Guillermo Fernández and María Guijarro and Pablo Olivas},
title = {Drone challenge: A platform for promoting programming and robotics skills in K-12 education},
journal = {International Journal of Advanced Robotic Systems},
volume = {16},
number = {1},
pages = {1729881418820425},
year = {2019b},
doi = {10.1177/1729881418820425},
URL = {https://doi-org.crai.referencistas.com/10.1177/1729881418820425},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1729881418820425},
abstract = {The development of skills related to computer programming and robotics and the introduction of computational thinking principles in high schools are worldwide trends today. An effective way of initiating young students in this world consists in proposing them stimulating challenges. This work presents a robotic platform that has been successfully used to develop a competition (called Drone Challenge) in which students had to program the navigation system for a simulated unmanned aerial vehicle (or drone). Both the competition and the supporting platform are described in detail. In particular, the article provides a deep technical description of the main components of the platform, namely the drone simulator and the navigation development framework. The results of the survey conducted after the challenge point to the suitability of the working platform deployed.}
}

@article{doi:10.1177/07356331241236882,
author = {Chung-Yuan Hsu and Meng-Jung Tsai},
title = {Predicting Robotics Pedagogical Content Knowledge: The Role of Computational and Design Thinking Dispositions via Teaching Beliefs},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {5},
pages = {1159–1181},
year = {2024c},
doi = {10.1177/07356331241236882},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241236882},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241236882},
abstract = {This research aimed to investigate the structural relationships among teachers’ computational thinking (CT), design thinking (DT), robotics teaching beliefs, and robotics pedagogical content knowledge (RPCK). A total of 98 in-service and pre-service teachers who participated in a robotics teaching professional development workshop served as the sample of the study. A survey including the Computational Thinking Scale, the Design Thinking Disposition Scale, the Robotics Teaching Beliefs Scale and the Technological Pedagogical Content Knowledge–Robotics Scale was conducted after the workshop. A confirmatory factor analysis was employed to validate the measurement constructs, and Partial Least Squares - Structural Equation Modeling (PLS-SEM) analysis was utilized to examine the relationships among the factors. The results revealed that both CT and DT dispositions could positively predict teachers’ robotics teaching beliefs, which subsequently predicted their RPCK. Moreover, a direct positive relationship between CT and RPCK was identified, while such a relationship was not evident for DT. The model demonstrates the critical role of CT in shaping teachers’ beliefs and pedagogical strategies of robotics teaching, and provides insights into the indirect influence of DT. Finally, the Model of Robotics Teaching Professional Development (MRTPD) was proposed to profile how to promote teachers’ pedagogical content knowledge of robotics teaching from their CT and DT dispositions.}
}

@article{doi:10.1177/10534512211024939,
author = {Amy Hutchison and Anya S. Evmenova},
title = {Planning Computer Science Instruction for Students With High-Incidence Disabilities},
journal = {Intervention in School and Clinic},
volume = {57},
number = {4},
pages = {262–267},
year = {2022d},
doi = {10.1177/10534512211024939},
URL = {https://doi-org.crai.referencistas.com/10.1177/10534512211024939},
eprint = {https://doi-org.crai.referencistas.com/10.1177/10534512211024939},
abstract = {States increasingly are adopting computer science standards to help students develop coding and computational thinking skills. In an effort to support teachers in introducing computer science content to their students with high-incidence disabilities, a new model, computer science integration planning plus universal design for learning (CSIP+), offers ways to integrate computational thinking and coding into content area instruction. This column presents an example of how a teacher might implement the CSIP+ model when designing instruction accessible to all learners. Guiding questions to support teachers at each phase of the planning cycle are provided.}
}

@article{doi:10.1177/14639491211033663,
author = {Joohi Lee and Candace Joswick and Kathryn Pole and Robin Jocius},
title = {Algorithm design for young children},
journal = {Contemporary Issues in Early Childhood},
volume = {23},
number = {2},
pages = {198–202},
year = {2022e},
doi = {10.1177/14639491211033663},
URL = {https://doi-org.crai.referencistas.com/10.1177/14639491211033663},
eprint = {https://doi-org.crai.referencistas.com/10.1177/14639491211033663},
abstract = {Algorithms are the essence of computational thinking, which refers to a set of problem-solving processes that help children become logical thinkers in this increasingly digital society. It is important for teachers of young children to carefully plan and implement algorithm design tasks that involve repeated step-by-step procedures to build strong foundational computational thinking skills. In this article, the authors present algorithm tasks, including following a recipe, creating a treasure map, modeling how to perform a task, and sharing a routine, which can be easily integrated in the daily activities in early childhood classrooms. Fostering young children’s aptitude for algorithm-specific thinking-and-doing processes creates a foundation for logical thinking.}
}

@article{doi:10.1080/11356405.2017.1305075,
author = {José-Manuel Sáez-López and María-Luisa Sevillano-García},
title = {Sensors, programming and devices in Art Education sessions. One case in the context of primary education / Sensores, programación y dispositivos en sesiones de Educación Artística. Un caso en el contexto de Educación Primaria},
journal = {Culture and Education},
volume = {29},
number = {2},
pages = {350–384},
year = {2017f},
doi = {10.1080/11356405.2017.1305075},
URL = {https://doi-org.crai.referencistas.com/10.1080/11356405.2017.1305075},
eprint = {https://doi-org.crai.referencistas.com/10.1080/11356405.2017.1305075},
abstract = {The pedagogical integration of computing is interesting in educational contexts based on the contributions of Seymour Papert and Wing’s concept of computational thinking. Integrating arts in education can lead to the design of activities using Scratch combined with devices. The main goal is to evaluate the integration of computational thinking in art education making use of technological resources, sensor cards and minicomputers, with a student-centred pedagogical approach. This research assesses the results of a control group of 35 students and an experimental group of 109 students in four different schools, using Mann-Whitney’s U-test for independent samples assessing ‘Active Learning’, ‘computational concepts’ and ‘fun’ scales. Applying data triangulation, and consistent with design-based research, the results of interviews and focus groups reinforced the results obtained in the aforementioned test, providing validity to the study. There are advantages regarding student interest, motivation and commitment related to programming technologies in art and education, particularly pedagogical sessions with music. Handling devices, sensors and Raspberry Pi provides participating students with a factor of commitment and enthusiasm, with significant improvements. Working with coding and devices brings an additional advantage in the development of computational thinking and digital competence. The results show an increase in creativity and artistic competence related to the ability to create music from the activities and technological resources described in the technological intervention.}
}

@article{doi:10.1177/14780771221139911,
author = {Dhanashree Sardeshpande and Vasudha Gokhale},
title = {“Legibility” a product of obligatory processes in parametric architectural design: A study of implications of associative modeling on design thinking in a parametric architectural design studio},
journal = {International Journal of Architectural Computing},
volume = {20},
number = {4},
pages = {728–741},
year = {2022g},
doi = {10.1177/14780771221139911},
URL = {https://doi-org.crai.referencistas.com/10.1177/14780771221139911},
eprint = {https://doi-org.crai.referencistas.com/10.1177/14780771221139911},
abstract = {In a problem-based, digital-intensive learning environment, the increased proliferation of computational tools used for architectural design has led to a fundamental transformation in architectural studios. Many studies have shown that this has significantly led to the change in cognition of design environments in academia. Design decisions are made through a recursive process that is cyclically refined by allowing constant feedback and testing. This paper represents an observational study with an aim to understand the impact of digital mediums on design processes and design outcomes focusing on associative modeling using VPL. It contextualizes the difference, the associative modeling system as a parametric subset brings to design thinking when used as a medium to explore architectural design. It analyzes specific attributes of associative modeling, otherwise native to computational thinking, that contribute to the legibility of the design process. The paper demonstrates how associative modeling allows the design process to be examined and edited at any stage during and even after algorithmic development, bringing in flexibility. It is argued that digital design tool affordances enable students to develop multilayered and more structured design logic that augments cognition bringing more legibility to the design thinking process.}
}

@article{doi:10.1177/1076217519880587,
author = {Del Siegle},
title = {There’s an App for That, and I Made It},
journal = {Gifted Child Today},
volume = {43},
number = {1},
pages = {64–71},
year = {2020h},
doi = {10.1177/1076217519880587},
URL = {https://doi-org.crai.referencistas.com/10.1177/1076217519880587},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1076217519880587},
abstract = {The Thunkable online platform is an easy-to-use resource for creating apps for mobile devices. Computational thinking is at the heart of problem solving in computer science, and research suggests students’ computational thinking improves when they use simple block coding systems similar to the format used for Thunkable.}
}

@article{doi:10.1177/21582440231205409,
author = {Fu-Hsing Tsai},
title = {Using a Physical Computing Project to Prepare Preservice Primary Teachers for Teaching Programing},
journal = {Sage Open},
volume = {13},
number = {4},
pages = {21582440231205410},
year = {2023i},
doi = {10.1177/21582440231205409},
URL = {https://doi-org.crai.referencistas.com/10.1177/21582440231205409},
eprint = {https://doi-org.crai.referencistas.com/10.1177/21582440231205409},
abstract = {The cultivation of computational thinking and programing education have gained prominence in K-12 education worldwide. Primary school teachers should be proficient in visual programing and using microcontrollers to teach programing courses. To cope with these trends, a learning activity was developed and implemented in Taiwan’s primary teacher education curriculum. The activity aimed to help preservice primary teachers learn about Scratch visual programing and micro:bit microcontroller boards by engaging in a physical computing project involving the design of an educational motion sensor game about energy. The results of the preliminary study found that the preservice primary teachers who participated in the activity were able to collaborate and develop motion sensor games suitable for primary school students. They also demonstrated significant improvements in their computational thinking concepts (t(10) = 3.13, p < .05) and energy knowledge test scores (t(10) = 2.74, p < .05). Furthermore, most participants expressed satisfaction with the activity, implying the activity’s feasibility for teacher education.}
}

@article{doi:10.1177/07356331231225468,
author = {Ting-Ting Wu and Lusia Maryani Silitonga and Budi Dharmawan and Astrid Tiara Murti},
title = {Empowering Students to Thrive: The Role of CT and Self-Efficacy in Building Academic Resilience},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {3},
pages = {816–845},
year = {2024j},
doi = {10.1177/07356331231225468},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231225468},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231225468},
abstract = {The relationship between computational thinking (CT) and academic self-efficacy for building students’ academic resilience—a trait crucial for problem-solving, peer relationships, and confidence development—was investigated. A mixed-methods approach was employed in a study involving 60 participants; half were given CT instruction and half were instructed traditionally. Quantitative data were analyzed using analysis of covariance and path analysis, while MAXQDA software was employed for qualitative interview data. The study found a positive correlation between CT instruction and academic self-efficacy with increased academic resilience, particularly in the experimental group, and identified key factors contributing to resilience. This study demonstrates the effectiveness of computational thinking (CT) and academic self-efficacy in enhancing academic performance, offering a new understanding of how these elements can be integrated into education to boost student resilience. It establishes a direct empirical link between CT instruction and increased academic self-efficacy, underscoring the value of specific teaching methodologies in fostering resilience. The findings are significant for educators, policymakers, and stakeholders in developing strategies to enhance students’ academic and personal success, thereby promoting their overall well-being. Recognizing the importance of CT and self-efficacy paves the way for customized educational programs that effectively support and empower students to thrive.}
}

