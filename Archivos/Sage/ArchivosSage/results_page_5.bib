@article{doi:10.1177/07356331231165099,
author = {Yousri Attia Mohamed Abouelenein and Mohamed Ali Nagy Elmaadaway},
title = {Impact of Teaching a Neuro-Computerized Course Through VLE to Develop Computational Thinking Among Mathematics Pre-service Teachers},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {6},
pages = {1175–1206},
year = {2023a},
doi = {10.1177/07356331231165099},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231165099},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231165099},
abstract = {The current study aims to determine the effect of teaching a mechanic neuro-computerized course through virtual learning environments (VLE) to develop computational thinking among mathematics pre-service teachers. The neuro-computerized virtual learning environments (NCVLE) model was designed to be used to teach the mechanics course to third-year students of the mathematics department. To achieve the targeted learning outcomes, the study recruited (102) third-year students of the Faculty of Education and classified them into a control group of (50) students and an experimental group of (52) students. The experiment lasted for 14 weeks during one semester of the 2021-2022 academic year. The results agreed with most of what has been found from relevant literature and studies. Also, the results indicated that the NCVLE model played a vital role in the purposeful teaching, learning, and assessment processes and enhanced the learning of computational thinking.}
}

@article{doi:10.1177/07356331231205052,
author = {Chih-Hung Chen and Hsiang-Yu Chung},
title = {Fostering Computational Thinking and Problem-Solving in Programming: Integrating Concept Maps Into Robot Block-Based Programming},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {1},
pages = {406–427},
year = {2024b},
doi = {10.1177/07356331231205052},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231205052},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231205052},
abstract = {Computational thinking (CT) has gained considerable attention and in-depth discussion over the last two decades. Although the significance of CT has been highlighted, it could be challenging for educators to teach CT. Fortunately, adopting robots in education has been evidenced to be of benefit to promoting students’ learning motivation, CT, and higher-order thinking skills. However, several significant factors affecting students’ programming performances in robot-assisted learning activities have been identified, such as cognitive needs and organization. In this study, a CMR-BBP (concept map robot block-based programming) approach was designed by integrating concept maps into robot block-based programming to enhance students’ programming learning. Moreover, a three-group experiment was carried out in an elementary school to evaluate their learning outcomes. The experimental results revealed that the CMR-BBP approach benefited the students’ perceptions of their computational thinking and problem solving in comparison with the R-BBP (robot block-based programming) and C-BBP (conventional block-based programming) approaches. Furthermore, regarding cognitive load, both the CMR-BBP and R-BBP approaches enhanced the students’ germane cognitive load, while the CMR-BBP approach effectively reduced their extrinsic cognitive load. This study could be a notable reference for designing other courses in conjunction with programming learning activities.}
}

@article{doi:10.1177/07356331221114183,
author = {Li Cheng and Xiaoman Wang and Albert D. Ritzhaupt},
title = {The Effects of Computational Thinking Integration in STEM on Students’ Learning Performance in K-12 Education: A Meta-analysis},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {2},
pages = {416–443},
year = {2023c},
doi = {10.1177/07356331221114183},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221114183},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221114183},
abstract = {Computational thinking is believed to be beneficial for Science, Technology, Engineering, and Mathematics (STEM) learning as it is closely related to many other skills required by STEM disciplines. There has been an increasing interest in integrating computational thinking into STEM and many studies have been conducted to examine the effects of this intervention. This meta-analysis examined the effects of computational thinking integration in STEM on students’ STEM learning performance in the K-12 education context. Following systematic procedures, we identified 20 publications with 21 studies meeting the inclusion and exclusion criteria from a range of academic databases. We extracted effect sizes on student learning outcomes in one-group pretest-posttest designs. We also examined a range of moderating variables in the models, including student levels, STEM disciplines, intervention durations, alignment with content standards (e.g., CSTA/NGSS), types of intervention (e.g., simulation), and the use of unplugged/plugged activities. Overall, we found a statistically significant large effect size (g = 0. 85 [95% CI of 0.57–1.14]; p < .001), indicating a large overall effect of computational thinking integration on STEM learning outcomes. The effect sizes were significantly moderated by intervention durations. We provide a discussion of the findings and present implications for future research and practice.}
}

@article{doi:10.1177/27527263231181963,
author = {Xiaoxuan Fang and Davy Tsz Kit Ng and Wing Tung Tam and Manwai Yuen},
title = {Integrating computational thinking into primary mathematics: A case study of fraction lessons with Scratch programming activities},
journal = {Asian Journal for Mathematics Education},
volume = {2},
number = {2},
pages = {220–239},
year = {2023d},
doi = {10.1177/27527263231181963},
URL = {https://doi-org.crai.referencistas.com/10.1177/27527263231181963},
eprint = {https://doi-org.crai.referencistas.com/10.1177/27527263231181963},
abstract = {We presented a design-based study within the context of a four-session Scratch programming activity among 23 fourth-grade students in Hong Kong. Inspired by the computational thinking (CT) strategies and the 5E instructional model, we investigated students’ mathematical learning of fractions in a Scratch (block-based programming) environment. Students developed CT concepts, practices, and perspectives by building a “fraction magic calculator” in groups. This study analyzed the lesson design, students’ drawings, interviews, and work expressing their mathematical understanding of fractions in Scratch applications. The learning tasks were designed to support the students’ fraction learning and utilized computational abstractions in the form of variables, functions, and iterations to formulate mathematical models in a programming context. Students’ artifacts and feedback showed they were interested in learning fractions in a programming learning context, contributing to exercising and improving their fraction concepts and CT. Ultimately, we emphasized the benefits of CT integrated into mathematics education, promoting students’ understanding of fraction concepts, a set of CT abilities (concepts, practices, perspectives), and learning motivation. Moreover, we suggested a set of non-cognitive skills (e.g., socializing, expressing) to enrich the CT perspectives in the framework and show the importance of developing coding communities to co-create digital artifacts among learners. Overall, we highlighted that mathematics teachers should apply and create learning tasks that promote computational thinking to forge mathematical ideas and thinking.}
}

@article{doi:10.2190/EC.49.4.b,
author = {Byeongsu Kim and Taehun Kim and Jonghoon Kim},
title = {Paper-and-Pencil Programming Strategy toward Computational Thinking for Non-Majors: Design Your Solution},
journal = {Journal of Educational Computing Research},
volume = {49},
number = {4},
pages = {437–459},
year = {2013e},
doi = {10.2190/EC.49.4.b},
URL = {https://doi-org.crai.referencistas.com/10.2190/EC.49.4.b},
eprint = {https://doi-org.crai.referencistas.com/10.2190/EC.49.4.b},
abstract = {The paper-and-pencil programming strategy (PPS) is a way of representing an idea logically by any representation that can be created using paper and pencil. It was developed for non-computer majors to improve their understanding and use of computational thinking and increase interest in learning computer science. A total of 110 non-majors in their sophomore year were assigned to either a Logo or a PPS course with attendance being 2 hours per week for 15 weeks. To measure the effectiveness of PPS, the Group Assessment of Logical Thinking and a self-assessment survey pre- and post-test were used. Findings indicated that PPS not only improved students’ overall logical thinking as much as did Logo programming learning, but also increased scores on one more subscale of logical thinking than did the Logo course. In addition, PPS significantly helped students understand the concept of computational thinking and increased their interest in learning computer science.}
}

@article{doi:10.1177/07356331231210946,
author = {Nikolaos Pellas},
title = {Assessing Computational Thinking, Motivation, and Grit of Undergraduate Students Using Educational Robots},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {620–644},
year = {2024f},
doi = {10.1177/07356331231210946},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231210946},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231210946},
abstract = {Educational technologists and practitioners have made substantial strides in developing affordable digital and tangible resources to support both formal and informal computer science instruction. However, there is a lack of research on practice-based assignments, such as Internet of Things (IoT) projects, that allow undergraduate students to design and demonstrate educational robots using digital or physical assistance, especially when it comes to computational thinking (CT) and programming skills development in association with their psycho-emotional experience. This study compares the impact of Scratch and LEGO® WeDo robotic kits on students’ CT and programming skills development. A quasi-experimental approach was conducted, involving two hundred forty-six participants (n = 246), who were equally divided between Scratch and LEGO® WeDo groups. Results indicate that the LEGO® WeDo group showed greater improvement in CT and programming skills development, while designing and presenting IoT projects. Nevertheless, no significant association between motivation, grit, and CT skills was observed. The findings highlight the potential of tangible robotics in facilitating students’ hands-on learning and enhancing motivation to foster CT and programming skills. This study provides a wide range of implications for instructional designers on how to use tangible robotics to support hands-on IoT projects in computer science courses.}
}

@article{doi:10.1177/10567879221076077,
author = {Papadakis Stamatios},
title = {Can Preschoolers Learn Computational Thinking and Coding Skills with ScratchJr? A Systematic Literature Review},
journal = {International Journal of Educational Reform},
volume = {33},
number = {1},
pages = {28–61},
year = {2024g},
doi = {10.1177/10567879221076077},
URL = {https://doi-org.crai.referencistas.com/10.1177/10567879221076077},
eprint = {https://doi-org.crai.referencistas.com/10.1177/10567879221076077},
abstract = {Computational Thinking (CT) and the understanding of how programs are being executed is internationally acknowledging as a necessity for today’s students and citizens of tomorrow. Despite the multifaceted nature of CT, the introduction of CT and associate concepts such as coding is regarded as developmental acceptable for preschool and kindergarten children. For a decade, there has been a focus on educational reform in the form of educational apps. For young children, an influx of mobile apps offering various interfaces and styles promote themselves as having educational value to introduce children aged 5–7 to essential CT, coding, and problem-solving skills. On the contrary, little is known about the educational value of these apps. The fast pace at which developers produce these apps and the breadth of the available apps have gone beyond what it is reasonable for researchers and experts in the domain to evaluate. This article presents a literature review on how the ScratchJr app affects young children’s CT, coding, and general literacy skills. The literature review includes 18 studies. The main conclusion is that although ScratchJr is not a panacea, it seems to be a helpful app that positively affects children’s CT and coding skills.}
}

@article{doi:10.1177/09610006221084126,
author = {Mega Subramaniam and Nitzan Koren and Shandra Morehouse and David Weintrop},
title = {Capturing computational thinking in public libraries: An examination of assessment strategies, audience, and mindset},
journal = {Journal of Librarianship and Information Science},
volume = {55},
number = {2},
pages = {358–370},
year = {2023h},
doi = {10.1177/09610006221084126},
URL = {https://doi-org.crai.referencistas.com/10.1177/09610006221084126},
eprint = {https://doi-org.crai.referencistas.com/10.1177/09610006221084126},
abstract = {This study examines the current state of assessment of computational thinking (CT) programming in public libraries in the United States. In particular, this study identifies the assessment tools and strategies that public library staff use to evaluate the success of CT youth programming, as well as how they share these assessment results, what they share, and with whom. This work also examines the perceptions of library staff on assessment of CT learning in libraries. Through our work, we highlight the need for a change of mindset in the perception of library staff toward assessment of CT learning in libraries. We also demonstrate the need for suitable assessment strategies to measure learning in CT programming in libraries beyond attendance and retention, that communicate to library staff on how they can revise their programs and to share their program impact with library stakeholders who make decisions on budget and resource allocations.}
}

@article{doi:10.1177/07356331241236744,
author = {Xiaowen Wang and Kan Kan Chan and Qianru Li and Shing On Leung},
title = {Do 3–8 Years Old Children Benefit From Computational Thinking Development? A Meta-Analysis},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {5},
pages = {1182–1208},
year = {2024i},
doi = {10.1177/07356331241236744},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241236744},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241236744},
abstract = {The interest in Computational Thinking (CT) development among young learners increases with the number of studies located in literature. In this study, a meta-analysis was conducted to address two main objectives: (a) the effectiveness of empirical interventions on the development of CT in children aged of 3–8 years; and (b) the variables that influence the effectiveness of the interventions. Following PRISMA procedures, we identified 17 empirical studies with 34 effect sizes and 1665 participants meeting the inclusion criteria from Web of Science database. Overall, we found a statistically significant large effect size (d = .83 [95% CI: 730, .890]; p < .001) on the CT development of 3–8 years old children, which provides empirical support for having young children to engage in CT experiences. The effect size was significantly influenced by moderating variables including gender, scaffolding, and education level. Intervention length showed a marginally significant effect. Therefore, educators could refer to the significant moderators when designing tailored interventions for CT development in early childhood education while a call for more empirical studies of CT development in young children is proposed.}
}

@article{doi:10.1177/07356331211057143,
author = {Zehui Zhan and Wenchang He and Xitian Yi and Shuyao Ma},
title = {Effect of Unplugged Programming Teaching Aids on Children’s Computational Thinking and Classroom Interaction: with Respect to Piaget’s Four Stages Theory},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {5},
pages = {1277–1300},
year = {2022j},
doi = {10.1177/07356331211057143},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211057143},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211057143},
abstract = {This paper examined the effect of the Unplugged Programming Teaching Aids (UPTA) on students’ computational thinking and classroom interaction. A set of UPTA was created and used in a primary school in southern China. A total of 48 students aged 6–8 were assigned to two classes, with the same instructor and learning materials, but only the treatment group was provided with the UPTA. Both groups were tested on computational thinking ability, children’s concrete operation status, degree of ego-centricity, and in-classroom interaction. Results indicated that the children aged 6–8 years old could classify things according to two kinds of criteria at the same time, but their cognitive style was still ego-centered and they found it difficult to deal with problems from a third-party perspective, no matter whether in the treatment group or the control group. However, students in the treatment group achieved significantly higher scores on the test of computational thinking and were more engaged in the classroom interaction patterns. These findings provide evidence of the positive effect of the UPTA on promoting children’s computational thinking by guiding them to decompose and solve problems, as well as enhancing their interaction and communication in the classroom, so as to transform from simple imitation to collaborative inquiry.}
}

