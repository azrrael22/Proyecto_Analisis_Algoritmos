@article{doi:10.1177/1326365X20970421,
author = {Kayt Davies},
title = {Why I Do Not Talk About Computational Thinking in Journalism Classes: Sorry (Not Really Sorry)},
journal = {Asia Pacific Media Educator},
volume = {30},
number = {2},
pages = {234–242},
year = {2020a},
doi = {10.1177/1326365X20970421},
URL = {https://doi-org.crai.referencistas.com/10.1177/1326365X20970421},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1326365X20970421}
}

@article{doi:10.1177/0735633120973432,
author = {Shlomit Hadad and Tamar Shamir-Inbal and Ina Blau and Eynat Leykin},
title = {Professional Development of Code and Robotics Teachers Through Small Private Online Course (SPOC): Teacher Centrality and Pedagogical Strategies for Developing Computational Thinking of Students},
journal = {Journal of Educational Computing Research},
volume = {59},
number = {4},
pages = {763–791},
year = {2021b},
doi = {10.1177/0735633120973432},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633120973432},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633120973432},
abstract = {This study explored (1) pedagogical strategies in Educational Coding and Robotics (ECR) learning which can develop computational thinking of students and (2) the degree of teacher centrality in the ECR classroom. In addition, we investigated (3) the added value of the Small Private Online Course (SPOC) to teacher professional development (TPD). We analyzed reflections of 80 in-service teachers on TPD through the SPOC (1,091 statements) and conducted semi-structured interviews with 13 of them one year after completing the course and teaching ECR in the classroom (328 statements). The most prominent strategies immediately after the TPD were constructing learning experiences, tinkering & debugging, and interdisciplinary learning, while one year later, experiential learning and collaborative learning were more common. Regarding the degree of teacher centrality, a year after teaching ECR curriculum the teachers had a significantly higher percentage of statements reflecting their role as a guide-on-the-side and as a partner of students in the learning process. Regarding the contribution of the SPOC for TPD, teacher statements revealed significantly more benefits than challenges in both points of time. Interestingly, the same categories emerged bottom-up as benefits and challenges: a variety of control dimensions, independent learning, learning and knowledge management and collaboration. Implications for educational theory and ECR practice are discussed.}
}

@article{doi:10.1177/0040059915594790,
author = {Maya Israel and Quentin M. Wherfel and Jamie Pearson and Saadeddine Shehab and Tanya Tapia},
title = {Empowering K–12 Students With Disabilities to Learn Computational Thinking and Computer Programming},
journal = {TEACHING Exceptional Children},
volume = {48},
number = {1},
pages = {45–53},
year = {2015c},
doi = {10.1177/0040059915594790},
URL = {https://doi-org.crai.referencistas.com/10.1177/0040059915594790},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0040059915594790}
}

@article{doi:10.1177/07356331231211916,
author = {Hsin-Yu Lee and Ting-Ting Wu and Chia-Ju Lin and Wei-Sheng Wang and Yueh-Min Huang},
title = {Integrating Computational Thinking Into Scaffolding Learning: An Innovative Approach to Enhance Science, Technology, Engineering, and Mathematics Hands-On Learning},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {431–467},
year = {2024d},
doi = {10.1177/07356331231211916},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231211916},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231211916},
abstract = {Science, Technology, Engineering, and Mathematics (STEM) education is essential for developing future-ready learners in both secondary and higher education levels. However, as students transition to higher education, many encounter challenges with independent learning and research. This can negatively impact their Higher-Order Thinking Skills (HOTS), engagement, and practical expertise. This study introduces a solution: Computational Thinking Scaffolding (CTS) in the Jupyter Notebook environment, designed to enhance STEM education at the tertiary level. CTS incorporates five phases: Decomposition, Pattern Recognition, Abstraction, Algorithm Design, and Evaluation. Utilizing a quasi-experimental method, we assessed the impact of CTS on the HOTS, engagement, and practical skills of undergraduate and postgraduate students. Our findings hold substantial relevance for university educators, academic advisors, and curriculum designers aiming to enhance students’ HOTS and hands-on capabilities in STEM disciplines. The results validate the effectiveness of CTS in elevating tertiary STEM learning outcomes, and they spotlight the adaptability of the Jupyter Notebook as a valuable tool in higher education. In conclusion, our research underscores the merits of CTS for improving outcomes in higher STEM education and sets a benchmark for future endeavors in this domain.}
}

@article{doi:10.1177/1461444820923674,
author = {Samantha Shorey and Benjamin Mako Hill and Samuel Woolley},
title = {From hanging out to figuring it out: Socializing online as a pathway to computational thinking},
journal = {New Media & Society},
volume = {23},
number = {8},
pages = {2327–2344},
year = {2021e},
doi = {10.1177/1461444820923674},
URL = {https://doi-org.crai.referencistas.com/10.1177/1461444820923674},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1461444820923674},
abstract = {Although socializing is a powerful driver of youth engagement online, platforms struggle to leverage social engagement to promote learning. We seek to understand this dynamic using a multi-stage analysis of over 14,000 comments on Scratch, an online platform designed to support learning about programming. First, we inductively develop the concept of “participatory debugging”—a practice in which users learn through the process of collaborative technical troubleshooting. Second, we use a content analysis to establish how common the practice is on Scratch. Third, we conduct a qualitative analysis of user activity over time and identify three factors that serve as social antecedents of participatory debugging: (1) sustained community, (2) identifiable problems, and (3) what we call “topic porousness” to describe conversations that are able to span multiple topics. We integrate these findings in a framework that highlights a productive tension between the desire to promote learning and the interest-driven sub-communities that drive user engagement in many new media environments.}
}

@article{doi:10.1177/07356331231204653,
author = {Dan Sun and Chengcong Zhu and Fan Xu and Yan Li and Fan Ouyang and Miaoting Cheng},
title = {Transitioning From Introductory to Professional Programming in Secondary Education: Comparing Learners’ Computational Thinking Skills, Behaviors, and Attitudes},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {3},
pages = {647–674},
year = {2024f},
doi = {10.1177/07356331231204653},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231204653},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231204653},
abstract = {Although previous research has provided some insights into the effects of block-based and text-based programming modalities, there is a dearth of a detailed, multi-dimensional analysis of the transition process from different introductory programming modalities to professional programming learning. This study employed a quasi-experimental design to address this gap, involving 64 secondary school students in two groups. For the beginning five weeks, the first group used an introductory block-based programming environment, while the second group used an introductory text-based programming environment. Then, both groups transitioned to professional text-based programming for the subsequent eight weeks. The results showed that participants who transitioned from introductory text-based programming to professional text-based programming (1) significantly outperformed in computational thinking skills; (2) had more code-writing and debugging behaviors and fewer irrelevant behaviors, and (3) had more interactions with the instructor. No significant differences were observed between the two groups regarding enjoyment, confidence, and interest in programming. Drawing on these findings, this study proposes pedagogical implications that could facilitate the adoption of programming modalities within the broader context of STEM education.}
}

@article{doi:10.1177/07356331241248686,
author = {Xiaojing Weng and Huiyan Ye and Yun Dai and Oi-lam Ng},
title = {Integrating Artificial Intelligence and Computational Thinking in Educational Contexts: A Systematic Review of Instructional Design and Student Learning Outcomes},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {6},
pages = {1640–1670},
year = {2024g},
doi = {10.1177/07356331241248686},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241248686},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241248686},
abstract = {A growing body of research is focusing on integrating artificial intelligence (AI) and computational thinking (CT) to enhance student learning outcomes. Many researchers have designed instructional activities to achieve various learning goals within this field. Despite the prevalence of studies focusing on instructional design and student learning outcomes, how instructional efforts result in the integration of AI and CT in students’ learning processes remains unclear. To address this research gap, we conducted a systematic literature review of empirical studies that have integrated AI and CT for student development. We collected 18 papers from four prominent research databases in the fields of education and AI technology: Web of Science, Scopus, IEEE, and ACM. We coded the collected studies, highlighting the students’ learning processes in terms of research methodology and context, learning tools and instructional design, student learning outcomes, and the interaction between AI and CT. The integration of AI and CT occurs in two ways: the integration of disciplinary knowledge and leveraging AI tools to learn CT. Specifically, we discovered that AI- and CT-related tools, projects, and problems facilitated student-centered instructional designs, resulting in productive AI and CT learning outcomes.}
}

@article{doi:10.1177/07356331241226459,
author = {Weipeng Yang},
title = {Coding With Robots or Tablets? Effects of Technology-Enhanced Embodied Learning on Preschoolers’ Computational Thinking and Social-Emotional Competence},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {4},
pages = {938–960},
year = {2024h},
doi = {10.1177/07356331241226459},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241226459},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241226459},
abstract = {Computational Thinking (CT) is essential for developing creativity, problem-solving, and digital competence in the 21st century. Coding tools like robotic toys and tablet apps have become popular in early childhood education to support CT development, but there is a debate on which tool is more effective. Little evidence exists on the effect of coding on children’s Social-Emotional Competence (SEC), which is crucial for lifelong development and extends beyond cognitive development. This experimental study aimed to compare the effectiveness of two 9-week programs on promoting 73 preschool children’s CT and SEC, one using coding robots and the other using coding apps. The results showed that children who participated in the Coding Robot Program had higher CT scores than those in the Coding App Program, after controlling for age, gender, family socioeconomic status, and baseline CT scores. While the SEC scores showed no substantial disparities between the groups, it was revealed that the initial performance levels moderated the intervention effects on emotional regulation and overall SEC. This suggests that the Coding Robot Program could be especially advantageous for a subset of children who initially have difficulties with emotional regulation and social skills. Implications of this study are presented for research and practice.}
}

@article{doi:10.1177/02103702241253407,
author = {Yue Zeng and Weipeng Yang and Alfredo Bautista},
title = {Developing young children’s computational thinking through programming with a hybrid kit / Desarrollo del pensamiento computacional infantil a través de la programación con un kit híbrido},
journal = {Journal for the Study of Education and Development},
volume = {47},
number = {2},
pages = {408–441},
year = {2024i},
doi = {10.1177/02103702241253407},
URL = {https://doi-org.crai.referencistas.com/10.1177/02103702241253407},
eprint = {https://doi-org.crai.referencistas.com/10.1177/02103702241253407},
abstract = {Fostering young children’s computational thinking (CT) has garnered global interest as it aligns with the cultivation of twenty-first-century skills. Previous studies have focused on physical, virtual and hybrid kits with virtual programming blocks, but rarely explored the use of hybrid kits that combine virtual sprites and physical programming environments. We conducted a quasi-experimental study to investigate the effect of using a hybrid programming kit on young children’s CT. Furthermore, we explored the characteristics of children’s programming engagement and the instructional strategies employed by teachers through video analysis and interviews. The results showed that: (1) children’s CT in the experimental group significantly improved, compared to that of peers in the control group; (2) children’s programming behaviour demonstrated a change from ‘action preceding thought’ to ‘thought preceding action’ and from ‘relying on trial and error’ to ‘active debugging’ with the support of teachers; (3) teachers used multiple strategies to support young children’s programming. These findings further indicate the importance of introducing programming in early childhood education and emphasize the critical role that teachers play in supporting young children’s learning of programming.}
}

@article{doi:10.1177/01626434221116077,
title = {Corrigendum to “Providing Access and Opportunity for Computational Thinking and Computer Science to Support Mathematics for Students With Disabilities”},
journal = {Journal of Special Education Technology},
volume = {38},
number = {3},
pages = {417–417},
year = {2023j},
doi = {10.1177/01626434221116077},
URL = {https://doi-org.crai.referencistas.com/10.1177/01626434221116077},
eprint = {https://doi-org.crai.referencistas.com/10.1177/01626434221116077}
}

