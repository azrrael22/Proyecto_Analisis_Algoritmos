@article{doi:10.1177/0888406421992376,
author = {Emily C. Bouck and Phil Sands and Holly Long and Aman Yadav},
title = {Preparing Special Education Preservice Teachers to Teach Computational Thinking and Computer Science in Mathematics},
journal = {Teacher Education and Special Education},
volume = {44},
number = {3},
pages = {221–238},
year = {2021a},
doi = {10.1177/0888406421992376},
URL = {https://doi-org.crai.referencistas.com/10.1177/0888406421992376},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0888406421992376},
abstract = {Increasingly in K–12 schools, students are gaining access to computational thinking (CT) and computer science (CS). This access, however, is not always extended to students with disabilities. One way to increase CT and CS (CT/CS) exposure for students with disabilities is through preparing special education teachers to do so. In this study, researchers explore exposing special education preservice teachers to the ideas of CT/CS in the context of a mathematics methods course for students with disabilities or those at risk of disability. Through analyzing lesson plans and reflections from 31 preservice special education teachers, the researchers learned that overall emerging promise exists with regard to the limited exposure of preservice special education teachers to CT/CS in mathematics. Specifically, preservice teachers demonstrated the ability to include CT/CS in math lesson plans and showed understanding of how CT/CS might enhance instruction with students with disabilities via reflections on these lessons. The researchers, however, also found a need for increased experiences and opportunities for preservice special education teachers with CT/CS to more positively impact access for students with disabilities.}
}

@article{doi:10.1177/07356331221098793,
author = {Shiau-Wei Chan and Chee-Kit Looi and Weng Kin Ho and Mi Song Kim},
title = {Tools and Approaches for Integrating Computational Thinking and Mathematics: A Scoping Review of Current Empirical Studies},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {8},
pages = {2036–2080},
year = {2023b},
doi = {10.1177/07356331221098793},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221098793},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221098793},
abstract = {The importance of computational thinking (CT) as a 21st-century skill for future generations has been a key consideration in the reforms of many national and regional educational systems. Much attention has been paid to integrating CT into the traditional subject classrooms. This paper describes a scoping review of learning tools for integrating CT and mathematics in current empirical studies published from 2015 to 2021. The review showed that most of the studies implemented CT-intensive Math-connected integration. Five major types of CT tools had been identified, i.e., digital tangibles, apps and games, programming languages, formative or summative assessments, and other technological tools. In many instances, the tools also provide functions of assessment of CT skills. The most assessed CT competencies were including algorithms and algorithmic thinking, abstraction, testing and debugging, loops, and sequences. Geometry and Measurement was the most assessed mathematics topic. Our scoping review is beneficial in the investigation of the literature on CT and mathematics education, as well as guides those who are interested in developing curriculum, programs, or assessments that involve the integration of CT and mathematics.}
}

@article{doi:10.1177/0735633119872908,
author = {Pao-Nan Chou},
title = {Using ScratchJr to Foster Young Children’s Computational Thinking Competence: A Case Study in a Third-Grade Computer Class},
journal = {Journal of Educational Computing Research},
volume = {58},
number = {3},
pages = {570–595},
year = {2020c},
doi = {10.1177/0735633119872908},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633119872908},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633119872908},
abstract = {This study investigated young children’s computational thinking (CT) development by integrating ScratchJr into a programming curriculum. Twelve third graders (six males and six females) voluntarily participated in an experiment-based computer class conducted at a public elementary school in Taiwan. This study adopted a case study methodology to investigate research questions in one specific case (8-week CT educational training). A one-group quasi-experimental pretest and posttest design with the support of qualitative observation was used to examine four research topics: CT competence progress, programming behaviors in a CT framework, factors influencing CT competence, and learning responses to CT training. The quantitative results indicated that students immersing in weekly programming projects significantly improved in terms of their CT competence, which was mostly retained 1 month after completion of the class. The programming behaviors indicated that students’ CT concepts (sequence, event, and parallelism) and practice (testing and debugging as well as reusing and remixing) significantly improved. Moreover, parents’ active involvement in take-home assignments influenced students’ long-term CT competence retention. The qualitative results indicated that students enjoyed using tablet computers to learn ScratchJr programming and demonstrated various leaning behaviors in a three-stage instructional design model.}
}

@article{doi:10.1177/07356331211060470,
author = {Jian-Wen Fang and Dan Shao and Gwo-Jen Hwang and Shao-Chen Chang},
title = {From Critique to Computational Thinking: A Peer-Assessment-Supported Problem Identification, Flow Definition, Coding, and Testing Approach for Computer Programming Instruction},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {5},
pages = {1301–1324},
year = {2022d},
doi = {10.1177/07356331211060470},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211060470},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211060470},
abstract = {Scholars believe that computational thinking is one of the essential competencies of the 21st century and computer programming courses have been recognized as a potential means of fostering students’ computational thinking. In tradition instruction, PFCT (problem identification, flow definition, coding, and testing) is a commonly adopted procedure to guide students to learn and practice computer programming. However, without further guidance, students might focus on learning the syntax of computer programming language rather than the concept of solving problems. This study proposes a peer-assessment-supported PFCT (PA-PFCT) approach for boosting students’ computer programming knowledge and computational thinking awareness. A quasi-experiment was conducted on a computer programming course in a high school to evaluate its influence on students’ learning achievement, computational thinking awareness, learning motivation, and self-efficacy. An experimental group of 51 students learned with the proposed approach, while a control group of 49 students learned with the traditional PFCT (T-PFCT) approach. The experimental results show that the proposed approach significantly enhanced the students’ computational thinking awareness, learning motivation, and self-efficacy, while not having significant impacts on their computer programming knowledge test scores.}
}

@article{doi:10.1177/0735633121992480,
author = {Ting-Chia Hsu and Yi-Sian Liang},
title = {Simultaneously Improving Computational Thinking and Foreign Language Learning: Interdisciplinary Media With Plugged and Unplugged Approaches},
journal = {Journal of Educational Computing Research},
volume = {59},
number = {6},
pages = {1184–1207},
year = {2021e},
doi = {10.1177/0735633121992480},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633121992480},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633121992480},
abstract = {This study proposed plugged and unplugged approaches for young students to simultaneously improve their interdisciplinary learning performance in English and Computational Thinking (CT). The plugged approach involved adopting educational robots to enhance CT and to provide English vocabulary and sentence practice via a board game. The unplugged version of the educational board game involved using a conventional board game without a computer, although it was designed for practicing CT as well as some foreign language vocabulary and conversational sentences. The results show that both approaches were helpful for simultaneously improving the students’ English proficiency of the target vocabulary and sentences, and their CT competence. The students’ foreign language learning anxiety during the English conversation in the plugged game was significantly lower than that of the students playing the unplugged game. On one hand, the cooperation tendency of the CT scale improved significantly for the students playing the unplugged game. On the other hand, the critical thinking of the CT scale improved significantly for those using the plugged approach. This research provides an innovation development and evaluation for plugged and unplugged approaches.}
}

@article{doi:10.1177/07356331241240670,
author = {Linlin Hu},
title = {Exploring Gender Differences in Computational Thinking Among K-12 Students: A Meta-Analysis Investigating Influential Factors},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {5},
pages = {1358–1384},
year = {2024f},
doi = {10.1177/07356331241240670},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241240670},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241240670},
abstract = {This study employs meta-analysis to synthesize findings from 30 articles investigating gender differences in computational thinking (CT) among K-12 students. Encompassing 51 independent effect sizes, the meta-analysis involves a participant pool of 9181 individuals from various countries, comprising 4254 males and 4927 females. Results indicate statistically significant gender differences in CT (Hedges’s g = 0.091, p < .05), albeit with a modest effect size, revealing higher CT scores among males compared to females. Further moderation analyses unveil the multifaceted nature of these gender differences. Specifically, while gender differences become significant during high school, recent studies suggest a gradual reduction in CT gender differences with societal progress among K-12 students. Moreover, findings illustrate variations in gender differences across geographical regions. Notably, while the overall gender disparity in CT is non-significant in the “East Asia and Pacific” region, it widens in “North America” and “Europe”, with males scoring higher than females. Conversely, in “Europe and Central Asia”, such gender differences present inconsistent outcomes, with females scoring higher than males. Importantly, assessment tool type does not significantly influence gender differences. Lastly, this study offers recommendations to address CT gender gaps, providing valuable insights for promoting gender equality in education.}
}

@article{doi:10.1177/07356331221121106,
author = {Mohd Kamal Othman and Syazni Jazlan and Fatin Afiqah Yamin and Shaziti Aman and Fitri Suraya Mohamad and Nurfarahani Norman Anuar and Abdulrazak Yahya Saleh and Ahmad Azaini Abdul Manaf},
title = {Mapping Computational Thinking Skills Through Digital Games Co-Creation           Activity Amongst Malaysian Sub-urban Children},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {2},
pages = {355–389},
year = {2023g},
doi = {10.1177/07356331221121106},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221121106},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221121106},
abstract = {This study investigates how digital game co-creation promotes Computational Thinking (CT) skills among children in sub-urban primary schools. Understanding how CT skills can be fostered in learning programming concepts through co-creating digital games is crucial to determine instructional strategies that match the young students’ interests and capacities. The empirical study has successfully produced a new checklist that can be used as a tool to describe the learning of CT skills when children co-create digital games. The checklist consists of 10 core CT skills: abstraction, decomposition, algorithmic thinking, generalisation, representation, socialisation, code literacy, automation, coordination, and debugging. Thirty-six 10–12 year-olds from sub-urban primary schools in Borneo participated in creating games in three separate eight-hour sessions. In addition, one pilot session with five participants was conducted. The game co-creation process was recorded to identify and determine how these young, inexperienced, untrained young learners collaborated while using CT skills. Analysis of their narratives while co-creating digital games revealed a pattern of using CT while developing the games. Although none of the groups demonstrated the use of all ten CTs, conclusively, all ten components of the CT were visibly present in their co-created digital games.}
}

@article{doi:10.1177/07356331231210560,
author = {Yu-Sheng Su and Shuwen Wang and Xiaohong Liu},
title = {Using Epistemic Network Analysis to Explore Primary School Students’ Computational Thinking in Pair Programming Learning},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {559–593},
year = {2024h},
doi = {10.1177/07356331231210560},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231210560},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231210560},
abstract = {Pair programming (PP) can help improve students’ computational thinking (CT), but the trajectory of CT skills and the differences between high-scoring and low-scoring students in PP are unknown and need further exploration. In this study, a total of 32 fifth graders worked on Scratch tasks in 16 pairs. The group discourse of three learning topics (comprising 9 projects) was collected. After the audio files were transcribed, 1,303 conversations were obtained. They were analyzed via Epistemic Network Analysis (ENA) Webkit, which can reveal the trajectory of students’ CT development via analyzing codes of discourse related to CT in PP. Three Scratch learning topics were assessed based on the Dr. Scratch platform to acquire the level of students’ CT and to determine the low- and high-scoring groups. Results indicated that CT concepts and CT practices were always closely related in PP and CT practices, and CT perspectives could be gradually and closely related after a long period of CT training. A significant difference between the two groups’ CT structures was found. The high-scoring group had more fragments of CT practice and connecting of CT perspectives, while the low-scoring group showed more fragments of CT concepts and expressing of CT perspectives. This research provides insights into cultivating primary school students’ CT using Scratch in the context of PP. The findings can provide suggestions for instructors to design instructional interventions to facilitate students’ CT skills via PP learning. Instructors can improve CT skills by guiding students to constantly ask questions, and specifying the role swap between driver and navigator in PP. Besides, instructors could give more consideration to the development of CT perspectives, and especially the ability to question.}
}

@article{doi:10.1177/07356331241227793,
author = {Chen Sun and Stephanie Yang and Betsy Becker},
title = {Debugging in Computational Thinking: A Meta-analysis on the Effects of Interventions on Debugging Skills},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {4},
pages = {1087–1121},
year = {2024i},
doi = {10.1177/07356331241227793},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241227793},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241227793},
abstract = {Computational thinking (CT), an essential 21st century skill, incorporates key computer science concepts such as abstraction, algorithms, and debugging. Debugging is particularly underrepresented in the CT training literature. This multi-level meta-analysis focused on debugging as a core CT skill, and investigated the effects of various debugging interventions. Moderator analyses revealed which interventions were effective, in which situations, and for what kind of learner. A significant overall mean effect of debugging interventions ( = 0.64, CI = (0.32, 0.96), p < .001), was found based on 62 effect sizes from 18 source articles. Significant between-studies variation indicated that true effects could range from −0.54 to 1.82. In addition, sensitivity analyses and checks on confounding provided further understandings of intervention features and their impacts. Interventions using enhanced debuggers and systematic instruction were particularly effective in fostering debugging skills. Debugging intervention effects varied by participant population and potentially by publication type. Moreover, debugging interventions had impact regardless of how debugging skills were measured, programming medium used, control-group type, and whether the study was randomized. Future studies should investigate the best practices for improving debugging abilities for whom and under what circumstances.}
}

@article{doi:10.1177/07356331211035182,
author = {Lihui Sun and Linlin Hu and Danhua Zhou},
title = {Single or Combined? A Study on Programming to Promote Junior High School Students’ Computational Thinking Skills},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {2},
pages = {283–321},
year = {2022j},
doi = {10.1177/07356331211035182},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211035182},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211035182},
abstract = {In this work, we studied the influence of different programming approaches on the development of students’ computational thinking (CT) skills, the programming experience and gender differences in CT development were also discussed. A total of 158 junior high school students and one teacher participated in the study over 5 months. The sample students were divided into four experimental groups in four single or combined programming approaches (i.e., plugged-in, unplugged, unplugged first, and plugged-in first) and one control group without programming. Data sources included the results of four CT tests, as well as interviews with the teacher and surveys with 24 representative participants. The results showed that the four programming approaches can effectively improve students’ CT skills and can be retained after two months. Among them, the form of implementing unplugged activities before plugged-in can most effectively improve CT skills, and can better weaken the impact of previous programming experience. Finally, the qualitative analysis results provided insights into the process of programming and CT education. These findings will provide implications for the introduction of CT in junior high school, and help expand students’ participation in computing.}
}

